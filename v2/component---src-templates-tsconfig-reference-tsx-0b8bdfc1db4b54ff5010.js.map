{"version":3,"sources":["webpack:///./src/templates/tsconfigReference.tsx","webpack:////home/runner/work/TypeScript-Website/TypeScript-Website/v2/node_modules/core-js/modules/es6.string.anchor.js","webpack:////home/runner/work/TypeScript-Website/TypeScript-Website/v2/node_modules/core-js/modules/_string-html.js"],"names":["TSConfigReferenceTemplateComponent","props","post","data","markdownRemark","console","log","JSON","stringify","categories","sitePage","fields","useEffect","subnavLinks","document","querySelectorAll","forEach","link","addEventListener","event","preventDefault","querySelector","target","scrollIntoView","behavior","block","updateSidebar","currentPossibleAnchor","fromTop","window","scrollY","section","hash","offsetTop","classList","add","remove","passive","capture","removeEventListener","className","style","backgroundColor","maxWidth","margin","paddingTop","id","map","c","href","anchor","display","key","options","element","dangerouslySetInnerHTML","__html","html","pageQuery","createHTML","name","this","$export","fails","defined","quot","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length"],"mappings":"iNA8FeA,UAtF4B,SAACC,GAG1C,IAAMC,EAAOD,EAAME,KAAKC,eACxB,IAAKF,EAEH,OADAG,QAAQC,IAAI,oBAAqBC,KAAKC,UAAUP,IACzC,8BAGT,IAAMQ,EAAaR,EAAME,KAAKO,SAAUC,OAAQF,WAgDhD,OA9CAG,qBAAU,WAGR,IAAMC,EAAcC,SAASC,iBAAoC,sBAEjEF,EAAYG,SAAQ,SAAAC,GAClBA,EAAKC,iBAAiB,SAAS,SAAAC,GAC7BA,EAAMC,iBAEON,SAASO,cAAcF,EAAMG,OAAN,MAC7BC,eAAe,CAAEC,SAAU,SAAUC,MAAO,gBAKvD,IAAMC,EAAgB,WACpB,IACIC,EADEC,EAAUC,OAAOC,QAIvBjB,EAAYG,SAAQ,SAAAC,GAClB,IAAMc,EAAUjB,SAASO,cAA8BJ,EAAKe,MACvDD,IACWA,EAAQE,WAAaL,IACxBD,EAAwBV,OAIvCJ,EAAYG,SAAQ,SAAAC,GACdA,IAASU,EACXV,EAAKiB,UAAUC,IAAI,WAEnBlB,EAAKiB,UAAUE,OAAO,eAQ5B,OAFAP,OAAOX,iBAAiB,SAAUQ,EAAe,CAAEW,SAAS,EAAMC,SAAS,IAC3EZ,IACO,WACLG,OAAOU,oBAAoB,SAAUb,OAMvC,kBAAC,IAAD,KACE,yBAAKc,UAAU,sBAAsBC,MAAO,CAAEC,gBAAiB,QAASC,SAAU,IAAKC,OAAQ,YAAaC,WAAY,WACtH,yBAAKC,GAAG,mBAAmBN,UAAU,UAClC/B,EAAYA,WAAYsC,KAAI,SAAAC,GAC3B,OAAKA,EACE,yBAAKR,UAAU,oBACpB,4BAAI,uBAAGS,KAAM,IAAMD,EAAEE,QAASF,EAAEG,UAChC,wBAAIC,IAAKJ,EAAEE,QACRF,EAAEK,QAASN,KAAI,SAAAO,GAAO,OAAI,wBAAIF,IAAKE,EAASJ,QAAS,uBAAGD,KAAM,IAAMK,EAASJ,QAAUI,EAASJ,cAJtF,SAWnB,yBAAKJ,GAAG,UACLrC,EAAYA,WAAYsC,KAAI,SAAAC,GAAC,OAAI,wBAAII,IAAKJ,EAAGE,QAAS,uBAAGD,KAAM,IAAMD,EAAGE,QAASF,EAAGG,cAGvF,yBAAKX,UAAU,UACb,yBAAKe,wBAAyB,CAAEC,OAAQtD,EAAKuD,YAUhD,IAAMC,EAAY,c,kCC9FzB,EAAQ,OAAR,CAA0B,UAAU,SAAUC,GAC5C,OAAO,SAAgBC,GACrB,OAAOD,EAAWE,KAAM,IAAK,OAAQD,Q,qBCJzC,IAAIE,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPN,EAAa,SAAUO,EAAQC,EAAKC,EAAWC,GACjD,IAAIC,EAAIC,OAAOP,EAAQE,IACnBM,EAAK,IAAML,EAEf,MADkB,KAAdC,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQR,EAAM,UAAY,KACtFO,EAAK,IAAMF,EAAI,KAAOH,EAAM,KAErCO,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKlB,GACfG,EAAQA,EAAQiB,EAAIjB,EAAQkB,EAAIjB,GAAM,WACpC,IAAIkB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKC,OAAS,KAC7D,SAAUN","file":"component---src-templates-tsconfig-reference-tsx-0b8bdfc1db4b54ff5010.js","sourcesContent":["import React, { useEffect } from \"react\"\nimport { graphql } from \"gatsby\"\nimport { TSConfigReferenceTemplate } from \"./__generated__/TSConfigReferenceTemplate\"\nimport { Layout } from \"../components/layout\"\n\nimport \"./markdown.scss\"\nimport \"./tsconfig.scss\"\n\nconst TSConfigReferenceTemplateComponent = (props: { pageContext: any, data: TSConfigReferenceTemplate, path: string }) => {\n  // console.log(props)\n\n  const post = props.data.markdownRemark\n  if (!post) {\n    console.log(\"Could not render:\", JSON.stringify(props))\n    return <div></div>\n  }\n\n  const categories = props.data.sitePage!.fields!.categories\n\n  useEffect(() => {\n    // Overrides the anchor behavior to smooth scroll instead\n    // Came from https://css-tricks.com/sticky-smooth-active-nav/\n    const subnavLinks = document.querySelectorAll<HTMLAnchorElement>(\".tsconfig nav li a\");\n\n    subnavLinks.forEach(link => {\n      link.addEventListener(\"click\", event => {\n        event.preventDefault();\n\n        let target = document.querySelector(event.target![\"hash\"]);\n        target.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n      })\n    })\n\n    // Sets the current selection\n    const updateSidebar = () => {\n      const fromTop = window.scrollY;\n      let currentPossibleAnchor: HTMLAnchorElement | undefined\n\n      // Scroll down to find the highest anchor on the screen\n      subnavLinks.forEach(link => {\n        const section = document.querySelector<HTMLDivElement>(link.hash);\n        if (!section) { return }\n        const isBelow = section.offsetTop <= fromTop\n        if (isBelow) currentPossibleAnchor = link\n      });\n\n      // Then set the active tag\n      subnavLinks.forEach(link => {\n        if (link === currentPossibleAnchor) {\n          link.classList.add(\"current\");\n        } else {\n          link.classList.remove(\"current\");\n        }\n      })\n    }\n\n    // Handles setting the scroll \n    window.addEventListener(\"scroll\", updateSidebar, { passive: true, capture: true });\n    updateSidebar()\n    return () => {\n      window.removeEventListener(\"scroll\", updateSidebar)\n    }\n  })\n\n\n  return (\n    <Layout >\n      <div className=\"tsconfig ms-depth-4\" style={{ backgroundColor: \"white\", maxWidth: 960, margin: \"1rem auto\", paddingTop: \"0.5rem\" }}>\n        <div id=\"full-option-list\" className=\"indent\">\n          {categories!.categories!.map(c => {\n            if (!c) return null\n            return <div className=\"tsconfig-nav-top\">\n              <h5><a href={\"#\" + c.anchor}>{c.display}</a></h5>\n              <ul key={c.anchor!}>\n                {c.options!.map(element => <li key={element!.anchor!}><a href={\"#\" + element!.anchor!}>{element!.anchor}</a></li>)}\n              </ul>\n            </div>\n          }\n          )}\n        </div>\n\n        <nav id=\"sticky\">\n          {categories!.categories!.map(c => <li key={c!.anchor!}><a href={\"#\" + c!.anchor}>{c!.display}</a></li>)}\n        </nav>\n\n        <div className=\"indent\">\n          <div dangerouslySetInnerHTML={{ __html: post.html! }} />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\n\nexport default TSConfigReferenceTemplateComponent\n\nexport const pageQuery = graphql`\n  query TSConfigReferenceTemplate($path: String, $tsconfigMDPath: String!) {\n    sitePage(path: { eq: $path }) {\n      id\n      fields {\n        categories {\n          categories {\n            display\n            anchor\n            options {\n              anchor\n            }\n          }\n        }\n      }\n    }\n\n    markdownRemark(fileAbsolutePath: {eq: $tsconfigMDPath} ) {\n      id\n      html\n\n      frontmatter {\n        permalink\n      }\n    }\n  }\n`\n","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}