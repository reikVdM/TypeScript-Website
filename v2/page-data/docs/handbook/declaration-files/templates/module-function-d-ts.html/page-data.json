{"componentChunkName":"component---src-templates-handbook-tsx","path":"/docs/handbook/declaration-files/templates/module-function-d-ts.html","result":{"data":{"markdownRemark":{"id":"dffe0b58-4b3f-5e59-89a4-1eca716a6c36","excerpt":"","html":"<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #4C566A\">// Type definitions for [~THE LIBRARY NAME~] [~OPTIONAL VERSION NUMBER~]</span>\n<span style=\"color: #4C566A\">// Project: [~THE PROJECT NAME~]</span>\n<span style=\"color: #4C566A\">// Definitions by: [~YOUR NAME~] &lt;[~A URL FOR YOU~]&gt;</span>\n\n<span style=\"color: #4C566A\">/*~ This is the module template file for function modules.</span>\n<span style=\"color: #4C566A\"> *~ You should rename it to index.d.ts and place it in a folder with the same name as the module.</span>\n<span style=\"color: #4C566A\"> *~ For example, if you were writing a file for \"super-greeter\", this</span>\n<span style=\"color: #4C566A\"> *~ file should be 'super-greeter/index.d.ts'</span>\n<span style=\"color: #4C566A\"> */</span>\n\n<span style=\"color: #4C566A\">// Note that ES6 modules cannot directly export class objects.</span>\n<span style=\"color: #4C566A\">// This file should be imported using the CommonJS-style:</span>\n<span style=\"color: #4C566A\">//   import x = require('[~THE MODULE~]');</span>\n<span style=\"color: #4C566A\">//</span>\n<span style=\"color: #4C566A\">// Alternatively, if --allowSyntheticDefaultImports or</span>\n<span style=\"color: #4C566A\">// --esModuleInterop is turned on, this file can also be</span>\n<span style=\"color: #4C566A\">// imported as a default import:</span>\n<span style=\"color: #4C566A\">//   import x from '[~THE MODULE~]';</span>\n<span style=\"color: #4C566A\">//</span>\n<span style=\"color: #4C566A\">// Refer to the TypeScript documentation at</span>\n<span style=\"color: #4C566A\">// https://www.typescriptlang.org/docs/handbook/modules.html#export--and-import--require</span>\n<span style=\"color: #4C566A\">// to understand common workarounds for this limitation of ES6 modules.</span>\n\n<span style=\"color: #4C566A\">/*~ If this module is a UMD module that exposes a global variable 'myFuncLib' when</span>\n<span style=\"color: #4C566A\"> *~ loaded outside a module loader environment, declare that global here.</span>\n<span style=\"color: #4C566A\"> *~ Otherwise, delete this declaration.</span>\n<span style=\"color: #4C566A\"> */</span>\n<span style=\"color: #81A1C1\">export</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">as</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">namespace</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">myFuncLib</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #4C566A\">/*~ This declaration specifies that the function</span>\n<span style=\"color: #4C566A\"> *~ is the exported object from the file</span>\n<span style=\"color: #4C566A\"> */</span>\n<span style=\"color: #81A1C1\">export</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">MyFunction</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #4C566A\">/*~ This example shows how to have multiple overloads for your function */</span>\n<span style=\"color: #81A1C1\">declare</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">function</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">MyFunction</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">name</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">MyFunction</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #8FBCBB\">NamedReturnType</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #81A1C1\">declare</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">function</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">MyFunction</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">length</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">MyFunction</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #8FBCBB\">LengthReturnType</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #4C566A\">/*~ If you want to expose types from your module as well, you can</span>\n<span style=\"color: #4C566A\"> *~ place them in this block. Often you will want to describe the</span>\n<span style=\"color: #4C566A\"> *~ shape of the return type of the function; that type should</span>\n<span style=\"color: #4C566A\"> *~ be declared in here, as this example shows.</span>\n<span style=\"color: #4C566A\"> *~</span>\n<span style=\"color: #4C566A\"> *~ Note that if you decide to include this namespace, the module can be</span>\n<span style=\"color: #4C566A\"> *~ incorrectly imported as a namespace object, unless</span>\n<span style=\"color: #4C566A\"> *~ --esModuleInterop is turned on:</span>\n<span style=\"color: #4C566A\"> *~   import * as x from '[~THE MODULE~]'; // WRONG! DO NOT DO THIS!</span>\n<span style=\"color: #4C566A\"> */</span>\n<span style=\"color: #81A1C1\">declare</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">namespace</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">MyFunction</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">export</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">interface</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">LengthReturnType</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">        width</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">        height</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">export</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">interface</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">NamedReturnType</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">        firstName</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">        lastName</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #4C566A\">/*~ If the module also has properties, declare them here. For example,</span>\n<span style=\"color: #4C566A\">     *~ this declaration says that this code is legal:</span>\n<span style=\"color: #4C566A\">     *~   import f = require('myFuncLibrary');</span>\n<span style=\"color: #4C566A\">     *~   console.log(f.defaultName);</span>\n<span style=\"color: #4C566A\">     */</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">export</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">defaultName</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">export</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">let</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">defaultLength</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span></code></div></pre>","headings":[],"frontmatter":{"permalink":"/docs/handbook/declaration-files/templates/module-function-d-ts.html","title":"module-function.d.ts"}}},"pageContext":{"slug":"/docs/handbook/declaration-files/templates/module-function-d-ts.html","isOldHandbook":true}}}