{"componentChunkName":"component---src-templates-handbook-tsx","path":"/docs/handbook/declaration-files/templates/global-plugin-d-ts.html","result":{"data":{"markdownRemark":{"id":"4d0d00f4-496b-52db-9934-4d24d2da1cd2","excerpt":"","html":"<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #4C566A\">// Type definitions for [~THE LIBRARY NAME~] [~OPTIONAL VERSION NUMBER~]</span>\n<span style=\"color: #4C566A\">// Project: [~THE PROJECT NAME~]</span>\n<span style=\"color: #4C566A\">// Definitions by: [~YOUR NAME~] &lt;[~A URL FOR YOU~]&gt;</span>\n\n<span style=\"color: #4C566A\">/*~ This template shows how to write a global plugin. */</span>\n\n<span style=\"color: #4C566A\">/*~ Write a declaration for the original type and add new members.</span>\n<span style=\"color: #4C566A\"> *~ For example, this adds a 'toBinaryString' method with overloads to</span>\n<span style=\"color: #4C566A\"> *~ the built-in number type.</span>\n<span style=\"color: #4C566A\"> */</span>\n<span style=\"color: #81A1C1\">interface</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Number</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #88C0D0\">toBinaryString</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">opts</span><span style=\"color: #81A1C1\">?:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">MyLibrary</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #8FBCBB\">BinaryFormatOptions</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #88C0D0\">toBinaryString</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">callback</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">MyLibrary</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #8FBCBB\">BinaryFormatCallback</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">opts</span><span style=\"color: #81A1C1\">?:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">MyLibrary</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #8FBCBB\">BinaryFormatOptions</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #4C566A\">/*~ If you need to declare several types, place them inside a namespace</span>\n<span style=\"color: #4C566A\"> *~ to avoid adding too many things to the global namespace.</span>\n<span style=\"color: #4C566A\"> */</span>\n<span style=\"color: #81A1C1\">declare</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">namespace</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">MyLibrary</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">type</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">BinaryFormatCallback</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">n</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">interface</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">BinaryFormatOptions</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">        prefix</span><span style=\"color: #81A1C1\">?:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">        padding</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #ECEFF4\">}</span></code></div></pre>","headings":[],"frontmatter":{"permalink":"/docs/handbook/declaration-files/templates/global-plugin-d-ts.html","title":"global-plugin.d.ts"}}},"pageContext":{"slug":"/docs/handbook/declaration-files/templates/global-plugin-d-ts.html","isOldHandbook":true}}}