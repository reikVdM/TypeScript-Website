{"componentChunkName":"component---src-templates-handbook-tsx","path":"/docs/handbook/declaration-files/templates/module-d-ts.html","result":{"data":{"markdownRemark":{"id":"88ff45bd-5892-54d1-84de-e41cdea170e1","excerpt":"","html":"<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #4C566A\">// Type definitions for [~THE LIBRARY NAME~] [~OPTIONAL VERSION NUMBER~]</span>\n<span style=\"color: #4C566A\">// Project: [~THE PROJECT NAME~]</span>\n<span style=\"color: #4C566A\">// Definitions by: [~YOUR NAME~] &lt;[~A URL FOR YOU~]&gt;</span>\n\n<span style=\"color: #4C566A\">/*~ This is the module template file. You should rename it to index.d.ts</span>\n<span style=\"color: #4C566A\"> *~ and place it in a folder with the same name as the module.</span>\n<span style=\"color: #4C566A\"> *~ For example, if you were writing a file for \"super-greeter\", this</span>\n<span style=\"color: #4C566A\"> *~ file should be 'super-greeter/index.d.ts'</span>\n<span style=\"color: #4C566A\"> */</span>\n\n<span style=\"color: #4C566A\">/*~ If this module is a UMD module that exposes a global variable 'myLib' when</span>\n<span style=\"color: #4C566A\"> *~ loaded outside a module loader environment, declare that global here.</span>\n<span style=\"color: #4C566A\"> *~ Otherwise, delete this declaration.</span>\n<span style=\"color: #4C566A\"> */</span>\n<span style=\"color: #81A1C1\">export</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">as</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">namespace</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">myLib</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #4C566A\">/*~ If this module has methods, declare them as functions like so.</span>\n<span style=\"color: #4C566A\"> */</span>\n<span style=\"color: #81A1C1\">export</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">function</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">myMethod</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">a</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #81A1C1\">export</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">function</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">myOtherMethod</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">a</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #4C566A\">/*~ You can declare types that are available via importing the module */</span>\n<span style=\"color: #81A1C1\">export</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">interface</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">someType</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    name</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">    length</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #D8DEE9FF\">    extras</span><span style=\"color: #81A1C1\">?:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #D8DEE9FF\">[]</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #4C566A\">/*~ You can declare properties of the module using const, let, or var */</span>\n<span style=\"color: #81A1C1\">export</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">myField</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #81A1C1\">;</span>\n\n<span style=\"color: #4C566A\">/*~ If there are types, properties, or methods inside dotted names</span>\n<span style=\"color: #4C566A\"> *~ of the module, declare them inside a 'namespace'.</span>\n<span style=\"color: #4C566A\"> */</span>\n<span style=\"color: #81A1C1\">export</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">namespace</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">subProp</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #4C566A\">/*~ For example, given this definition, someone could write:</span>\n<span style=\"color: #4C566A\">     *~   import { subProp } from 'yourModule';</span>\n<span style=\"color: #4C566A\">     *~   subProp.foo();</span>\n<span style=\"color: #4C566A\">     *~ or</span>\n<span style=\"color: #4C566A\">     *~   import * as yourMod from 'yourModule';</span>\n<span style=\"color: #4C566A\">     *~   yourMod.subProp.foo();</span>\n<span style=\"color: #4C566A\">     */</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">export</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">function</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">foo</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">void</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #ECEFF4\">}</span></code></div></pre>","headings":[],"frontmatter":{"permalink":"/docs/handbook/declaration-files/templates/module-d-ts.html","title":"module.d.ts"}}},"pageContext":{"slug":"/docs/handbook/declaration-files/templates/module-d-ts.html","isOldHandbook":true}}}